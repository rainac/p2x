# This file is part of P2X.
# Copyright © 2013 Johannes Willkomm 
# See the file p2x.cc for copying conditions.  

default namespace = "NAMESPACE_CX"
namespace ca = "NAMESPACE_CA"

start = code-xml | scan-xml

scan-xml = element scan-xml {
   scan-conf?,
   node-content+
}

scan-conf = element ca:scanner { attribute type { text }?, lexem+ }

lexem = element ca:lexem {
      element ca:re { text },
      element ca:action { text }
}

ca-op-def = element ca:op { 
                     attribute type { text },
                     attribute repr { text }?,
                     attribute mode { text },
                     attribute precedence { text }?,
                     attribute unary-precedence { text }?,
                     attribute associativity { text }?,
                     attribute is-paren { text }?,
                     element ca:closing-list {
                        ca-op-def+
                     }?
               }

code-xml = element code-xml {
       attribute ca:version { text },
       element ca:steps { ca-step* }?,
       scan-conf?,
       element ca:parser { attribute type { text }?, ca-op-def+ }?,
       element ca:tree-writer { 
             attribute col { text },
             attribute merged { text },
             attribute encoding { text },
             attribute id { text },
             attribute indent { text },
             attribute line { text },
             attribute mode { text },
             attribute newlineAsBr { text },
             attribute prec { text },
             attribute strict{ text },
             attribute parseConf { text },
             attribute scanConf { text },
             attribute treewriterConf { text },
             attribute caSteps { text },
             attribute code { text },
             attribute type { text }
       }?,
       element ca:token-types { ca-op* }?,
       root
}

root = element root {
        node-content
}

node = null | op | paren | id | integer | float | string-lit

null = element null { empty }

node-content = attr-node, annot?, node?, annot*, ca-itr?, annot*, node?, annot?

op = element op {
     node-content
}

paren = element paren {
     node-content, node?, annot?
}

id = element id {
     node-content
}

string-lit = element string {
     attr-node, ca-itr, annot*
}

integer = element int {
     attr-node, ca-itr, annot*
}

float = element float {
     attr-node, ca-itr, annot*
}

ca-itr = ca-text | ca-br

annot = ca-ignore

ca-step = element ca:step {
      attr-id,
      text
}

ca-op = element ca:op {
      attr-code?,
      attr-type,
      attr-repr?,
      attr-mode,
      attr-is-paren?,
      attr-prec?,
      attr-unary-prec?,
      attr-assoc?,
      attr-output-mode?,
      closing-list?
}

closing-list = element ca:closing-list {
      ca-op+
}

ca-ignore = element ca:ignore {
      attr-node,
      ca-text
}

ca-text = element ca:text {
        text
}

ca-br = element ca:br {
        empty
}

attr-node = attr-id?, attr-repr?, attr-code?, attr-type, attr-location?, attr-file?
attr-id = attribute id { xsd:int }
attr-code = attribute code { xsd:int }
attr-prec = attribute precedence { xsd:int }
attr-unary-prec = attribute unary-precedence { xsd:int }
attr-assoc = attribute associativity { "LEFT" | "RIGHT" | "NONE" }
attr-output-mode = attribute output-mode { "NONE" | "NESTED" | "MERGED" }
attr-repr = attribute repr { text }
attr-type = attribute type { text }
attr-mode = attribute mode { text }
attr-is-paren = attribute is-paren { text }
attr-location = attribute line { xsd:int }, attribute col { xsd:int }
attr-file = attribute file { text }, attribute path { text }


