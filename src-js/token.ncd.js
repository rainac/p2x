// -*- javascript -*- 
// This file has been automatically generated by 
// gennc.sh $Id: gennc-js.xsl 91 2016-01-25 19:18:51Z jwillkomm $
// from definition file ../src/xml/token.ncd.xml.

if (typeof window == "undefined") {
  var ENUM = require('./gennc-common.js')
}
ENUM.createParserToken = function() {
 var k=0
 var prefix='TOKEN_'
 var index={
 EOF: (k=0),
 KEYW_FOR: ++k,
 KEYW_IF: ++k,
 KEYW_WHILE: ++k,
 KEYW_ELSE: ++k,
 KEYW_ELSEIF: ++k,
 KEYW_SWITCH: ++k,
 KEYW_CASE: ++k,
 KEYW_OTHERWISE: ++k,
 KEYW_DEFAULT: ++k,
 KEYW_RETURN: ++k,
 KEYW_FUNCTION: ++k,
 KEYW_BREAK: ++k,
 KEYW_CONTINUE: ++k,
 KEYW_GOTO: ++k,
 KEYW_STATIC: ++k,
 KEYW_PUBLIC: ++k,
 KEYW_PRIVATE: ++k,
 KEYW_REGISTER: ++k,
 KEYW_AUTO: ++k,
 KEYW_VAR: ++k,
 KEYW_CONST: ++k,
 KEYW_GLOBAL: ++k,
 KEYW_PERSISTENT: ++k,
 KEYW_TRY: ++k,
 KEYW_CATCH: ++k,
 KEYW_END: ++k,
 ROOT: ++k,
 INTEGER: ++k,
 FLOAT: ++k,
 STRING: ++k,
 IDENTIFIER: ++k,
 HASH_COMMENT: ++k,
 CLINE_COMMENT: ++k,
 C_COMMENT: ++k,
 L_PAREN: ++k,
 R_PAREN: ++k,
 L_BRACE: ++k,
 R_BRACE: ++k,
 L_BRACKET: ++k,
 R_BRACKET: ++k,
 EQUAL: ++k,
 LESS: ++k,
 GREATER: ++k,
 EXCLAM: ++k,
 QUESTION: ++k,
 TILDE: ++k,
 PLUS: ++k,
 MINUS: ++k,
 MULT: ++k,
 DIV: ++k,
 BACKSLASH: ++k,
 MOD: ++k,
 POW: ++k,
 COLON: ++k,
 COMMA: ++k,
 SEMICOLON: ++k,
 FULL_STOP: ++k,
 UNDERSCORE: ++k,
 DOLLAR: ++k,
 AT: ++k,
 AND: ++k,
 OR: ++k,
 CIRC: ++k,
 HASH: ++k,
 QUOTE: ++k,
 APOS: ++k,
 CRETURN: ++k,
 NEWLINE: ++k,
 TAB: ++k,
 SPACE: ++k,
 JUXTA: ++k,
 JUXTA_POST: ++k,
 ILLEGAL_CHAR: ++k,
 LEFT_ARROW: ++k,
 RIGHT_ARROW: ++k,
 DOUBLE_LEFT_ARROW: ++k,
 DOUBLE_RIGHT_ARROW: ++k,
 DOUBLE_AND: ++k,
 DOUBLE_OR: ++k,
 DOUBLE_COLON: ++k,
 TRIPLE_COLON: ++k,
 LE: ++k,
 GE: ++k,
 DOUBLE_L_BRACKET: ++k,
 DOUBLE_R_BRACKET: ++k,
 DOUBLE_EQUAL: ++k,
 NOT_EQUAL: ++k,
 OPERATOR: ++k,
 MINUS_GREATER: ++k,
 DOUBLE_PLUS: ++k,
 DOUBLE_MINUS: ++k,
 DOUBLE_LESS: ++k,
 DOUBLE_GREATER: ++k,
 AND_EQUAL: ++k,
 OR_EQUAL: ++k,
 POW_EQUAL: ++k,
 PLUS_EQUAL: ++k,
 MINUS_EQUAL: ++k,
 MULT_EQUAL: ++k,
 DIV_EQUAL: ++k,
 MOD_EQUAL: ++k,
 DOUBLE_LESS_EQUAL: ++k,
 DOUBLE_GREATER_EQUAL: ++k,
 DOTMULT: ++k,
 DOTDIV: ++k,
 DOTBACKSLASH: ++k,
 DOTPOW: ++k,
 DOTAPOS: ++k,
 TRIPLE_DOT: ++k,
 BACKSLASH_EQUAL: ++k,
 TILDE_EQUAL: ++k,
 DOT_MULT_EQUAL: ++k,
 DOT_DIV_EQUAL: ++k,
 DOT_BACKSLASH_EQUAL: ++k,
 DOT_POW_EQUAL: ++k,
 DOUBLE_DIV: ++k,
 C_COMMENT_START: ++k,
 C_COMMENT_END: ++k,
 IGNORE: ++k,
 LAST: ++k,
 }
 var comments
 var res=ENUM.createENUM(index, prefix, comments)
 return res
}
ENUM.ParserToken=ENUM.createParserToken()
if (typeof window == 'undefined') {
 for (k in ENUM) {
  exports[k]=ENUM[k]
 }
}
  