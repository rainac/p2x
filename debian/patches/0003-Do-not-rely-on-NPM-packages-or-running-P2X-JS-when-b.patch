From: Johannes Willkomm <johannes@johannes-willkomm.de>
Date: Mon, 30 May 2022 12:26:50 +0200
Subject: Do not rely on NPM packages or running P2X JS when building

---
 configure.ac         | 10 +++++++++-
 src-js/Makefile.am   | 38 +++++++++++++++++++++++++-------------
 src-js/p2xjs         |  8 +++++---
 tests/sh/Makefile.am |  7 +++++--
 4 files changed, 44 insertions(+), 19 deletions(-)

diff --git a/configure.ac b/configure.ac
index 621b643..5c10189 100644
--- a/configure.ac
+++ b/configure.ac
@@ -35,13 +35,16 @@ AM_CONDITIONAL(acond_NPM_AVAIL, [test "x$NPM" != "x"])
 
 if [test "x$NPM" != "x"]; then
    npm_packages="most-xml tmp node-minify"
+   npm_packages_avail=yes
    for pkg in $npm_packages; do
        if ! $NPM list -g $pkg > /dev/null; then
-	  AC_MSG_ERROR([mandatory program node-js module "$pkg" is not installed
+          npm_packages_avail=
+          AC_MSG_WARN([mandatory program node-js module "$pkg" is not installed
 			please do "$NPM install -g $pkg"])
        fi
    done
 fi
+AM_CONDITIONAL(acond_NPM_PKGS_AVAIL, [test "$npm_packages_avail" != ""])
 
 AC_CHECK_PROGS([TRANG], [trang])
 AM_CONDITIONAL(acond_TRANG_AVAIL, [test "x$TRANG" != "x"])
@@ -234,10 +237,15 @@ echo " re2c:           [$RE2C]"
 echo " trang:          [$TRANG]"
 echo " gengetopt:      [$GENGETOPT]"
 echo " emacs:          [$EMACS]"
+if test "$build_tests" = "yes"; then
 echo " xmlstarlet:     [$XMLSTARLET]"
 echo " shunit2:        [$SHUNIT2]"
 echo " valgrind:       [$VALGRIND]"
+fi
 echo ""
 echo " npm:            [$NPM]"
+echo " npm packages:   [$npm_packages_avail]"
+if test "$build_tests" = "yes"; then
 echo " mocha:          [$MOCHA]"
+fi
 echo ""
diff --git a/src-js/Makefile.am b/src-js/Makefile.am
index 76ac9b9..2ebb0e7 100644
--- a/src-js/Makefile.am
+++ b/src-js/Makefile.am
@@ -1,8 +1,8 @@
 
 json_files = scanner-c.json
 
-instbasedir=$(pkgdatadir)
-instdir= $(instbasedir)/js
+instbasedir = $(pkgdatadir)
+instdir = $(instbasedir)/js
 
 dist_bin_SCRIPTS = p2xjs
 
@@ -12,9 +12,14 @@ unmin_files = $(ncd_files) scanner.js hashmap.js parse-xml.js parse-opts.js p2x.
 
 min_files = $(addsuffix .min.js, $(basename $(unmin_files)))
 
-generated_files = $(min_files) $(json_files)
+generated_files = $(json_files) node_modules_updated.txt
 
-project_files = $(generated_files) $(unmin_files)
+project_files = $(json_files) $(unmin_files)
+
+if acond_NPM_PKGS_AVAIL
+	generated_files += $(min_files)
+	project_files += $(min_files)
+endif
 
 inst_DATA = $(project_files)
 
@@ -23,10 +28,10 @@ gennc-common.js: token.ncd.js
 %.ncd.js: $(top_srcdir)/src/xml/%.ncd.xml
 	gennc -m JavaScript $^
 
-%.json: $(top_srcdir)/src/xml/%.xml $(node_modules) scanconf-xml2json.min.js
-	./p2xjs scanconf-xml2json -S $< -o $@
+%.json: ../examples/configs/%.json
+	cp $< $@
 
-%.min.js: %.js  compress.js $(node_modules)
+%.min.js: %.js compress.js node_modules_updated.txt
 	sed -e '/require/ s/.js/.min.js/' $< > $<.tmp
 	nodejs compress.js -o $@ $<.tmp
 	rm $<.tmp
@@ -40,7 +45,7 @@ scanner-setup.js: $(top_srcdir)/src/xsl/gen-js-scanner.xsl $(top_srcdir)/src/sca
 clean-local:
 	$(RM) -f $(generated_files)
 
-apache_confd=$(sysconfdir)/apache2/conf.d
+apache_confd = $(DESTDIR)$(sysconfdir)/apache2/conf.d
 
 node_module_names = most-xml tmp node-minify
 
@@ -48,14 +53,21 @@ node_modules = $(addprefix node_modules/, $(node_module_names))
 
 .PRECIOUS: node_modules/%
 
-node_modules/%:
-	npm link $*
+node_modules/%: node_modules_updated.txt
+
+node_modules:
+	mkdir $@
 
-$(instdir):
-	$(INSTALL) -d $@
+$(node_modules) node_modules_updated.txt: node_modules Makefile.am
+	touch node_modules_updated.txt
+if acond_NPM_PKGS_AVAIL
+	npm link $(node_module_names)
+endif
 
-install-data-local: $(instdir)
+install-data-local:
+if acond_NPM_PKGS_AVAIL
 	cd $(instdir) $(foreach f, $(node_module_names), && npm link $(f))
+endif
 	$(INSTALL) -d $(apache_confd)
 	echo "Alias $(server_base)/p2x $(prefix)/share/p2x/js/" > $(apache_confd)/p2x-js.conf
 
diff --git a/src-js/p2xjs b/src-js/p2xjs
index c77b0d8..83dd40c 100755
--- a/src-js/p2xjs
+++ b/src-js/p2xjs
@@ -32,7 +32,11 @@ srcdir=$(dirname $BASH_SOURCE)
 P2X_HOME=${P2X_HOME:-$(readlink -f $(dirname $BASH_SOURCE)/..)}
 export P2X_HOME
 
-main_src=$mode.min.js
+if [[ "$@" == *"--unmin"* ]]; then
+    main_src=$mode.js
+else
+    main_src=$mode.min.js
+fi
 
 if test -r $srcdir/$main_src; then
     file=$srcdir/$main_src
@@ -46,8 +50,6 @@ fi
 if [[ "$@" == *"--debug"* ]]; then
     NODEOPTS=--inspect
     file=$(dirname $file)/$(basename $file .min.js).js
-elif [[ "$@" == *"--unmin"* ]]; then
-    file=$(dirname $file)/$(basename $file .min.js).js
 elif [[ "$@" == *"--inspect"* ]]; then
     NODEOPTS=--inspect
 fi
diff --git a/tests/sh/Makefile.am b/tests/sh/Makefile.am
index ea7fcc8..d40b8fa 100644
--- a/tests/sh/Makefile.am
+++ b/tests/sh/Makefile.am
@@ -4,8 +4,11 @@ generated_files = all_tests.sh test_cmp_js.sh test_cmp_jsy.sh test_reparse.sh te
 good = val_tests test_reproduce_strict test_reproduce test_reparse	\
 parse_tests merge_tests p2x_tests test_output_stability indent_tests	\
 valgrind_tests output_mode_json_merged output_mode_json			\
-output_mode_matlab_merged output_mode_matlab cdecls p2xjs_mocha_tests	\
-test_cmp_js
+output_mode_matlab_merged output_mode_matlab cdecls
+
+if acond_NPM_PKGS_AVAIL
+good += p2xjs_mocha_tests test_cmp_js
+endif
 
 # js tests
 # reproduce_ign test_cmp_js p2xjs_mocha_tests
