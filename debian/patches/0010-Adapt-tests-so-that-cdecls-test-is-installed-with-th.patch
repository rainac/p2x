From: Johannes Willkomm <johannes@johannes-willkomm.de>
Date: Mon, 23 May 2022 16:49:37 +0200
Subject: Adapt tests so that cdecls test is installed with the package

---
 .gitignore                                   |  1 +
 Makefile.am                                  |  2 +-
 configure.ac                                 |  1 +
 examples/Makefile.am                         | 13 +++-
 src/Makefile.am                              |  5 +-
 src/xsl/Makefile.am                          | 10 ++++
 tests/Makefile.am                            |  2 +
 tests/run-unit-test                          | 20 +++++++
 tests/sh/Makefile.am                         |  9 ++-
 tests/sh/cdecls.sh                           | 20 +++++--
 tests/sh/common.sh                           |  6 +-
 tests/sh/funcs.sh                            | 61 -------------------
 tests/sh/head_cmp_js.sh                      |  2 +-
 tests/sh/head_cmp_jsy.sh                     |  2 +-
 tests/sh/head_output_stability.sh            |  2 +-
 tests/sh/head_reparse.sh                     |  2 +-
 tests/sh/head_reproduce.sh                   |  2 +-
 tests/sh/head_reproduce_strict.sh            |  2 +-
 tests/sh/header_all_tests.sh                 |  2 +-
 tests/sh/indent_tests.sh                     |  9 +--
 tests/sh/merge_tests.sh                      |  2 +-
 tests/sh/p2x_tests.sh                        |  3 +-
 tests/sh/parse_tests.sh                      |  2 +-
 tests/sh/parse_tests_merged.sh               |  2 +-
 tests/sh/parse_tests_new.sh                  |  2 +-
 tests/sh/parse_tests_not_same_when_merged.sh |  2 +-
 tests/sh/parse_tests_null_placement.sh       |  2 +-
 tests/sh/parse_tests_same_when_merged.sh     |  2 +-
 tests/sh/setup.sh                            | 89 ++++++++++++++++++++++++++++
 tests/sh/setup_sh.sh                         |  7 ---
 tests/sh/setup_tmp.sh                        |  9 ---
 tests/sh/setup_zsh.sh                        |  6 --
 tests/sh/val_tests.sh                        | 44 +++-----------
 33 files changed, 184 insertions(+), 161 deletions(-)
 create mode 100644 src/xsl/Makefile.am
 create mode 100644 tests/run-unit-test
 delete mode 100644 tests/sh/funcs.sh
 create mode 100644 tests/sh/setup.sh
 delete mode 100644 tests/sh/setup_sh.sh
 delete mode 100644 tests/sh/setup_tmp.sh
 delete mode 100644 tests/sh/setup_zsh.sh

diff --git a/.gitignore b/.gitignore
index 1269c4f..e745524 100644
--- a/.gitignore
+++ b/.gitignore
@@ -20,6 +20,7 @@ tests/sh/test_*.sh
 src-js/node_modules
 src-js/scanner-c.json
 tests/sh/forall_tests.sh
+tests/sh/all_tests.sh
 tests/sh/log_*.txt
 tests/sh/err_*.txt
 src-js/p2xa.js
diff --git a/Makefile.am b/Makefile.am
index 3f64fe4..36e23b9 100644
--- a/Makefile.am
+++ b/Makefile.am
@@ -16,7 +16,7 @@ version.txt $(generated_files)
 
 EXTRA_DIST = aclocal.m4 configure.ac
 
-instdir = $(datadir)/doc/$(PACKAGE)
+instdir = $(docdir)
 
 inst_DATA= $(project_files)
 
diff --git a/configure.ac b/configure.ac
index 1e8fb34..733ceec 100644
--- a/configure.ac
+++ b/configure.ac
@@ -192,6 +192,7 @@ AC_CHECK_HEADERS([sys/stat.h])
 
 AC_CONFIG_FILES([Makefile
                  src/Makefile
+                 src/xsl/Makefile
                  src-js/Makefile
                  examples/Makefile
                  tests/Makefile
diff --git a/examples/Makefile.am b/examples/Makefile.am
index b9184af..b9dec79 100644
--- a/examples/Makefile.am
+++ b/examples/Makefile.am
@@ -4,8 +4,17 @@
 # See the file p2x.cc for copying conditions.  
 #
 
-instbasedir=$(pkgdatadir)
-instdir= $(instbasedir)
+instdir = $(DESTDIR)$(docdir)/examples
+
+install:
+	echo "prefix=$(prefix)"
+	echo "bindir=$(bindir)"
+	mkdir -p $(instdir)/configs
+	mkdir -p $(instdir)/in
+	mkdir -p $(instdir)/xsl
+	install -c -m 644 configs/cdecls $(instdir)/configs
+	install -c -m 644 in/cdecls.exp  $(instdir)/in
+	install -c -m 644 xsl/cdecls.xsl $(instdir)/xsl
 
 examples = $(wildcard in/*.exp)
 
diff --git a/src/Makefile.am b/src/Makefile.am
index 6ef683b..744aeb4 100644
--- a/src/Makefile.am
+++ b/src/Makefile.am
@@ -4,6 +4,8 @@
 # See the file p2x.cc for copying conditions.  
 #
 
+SUBDIRS = xsl
+
 bin_PROGRAMS = p2x
 if acond_BUILD_TESTS
 bin_PROGRAMS += p2xtests
@@ -87,8 +89,7 @@ code-xml.rnc: code-xml.rnc.in
 instbasedir=$(pkgdatadir)
 instdir= $(instbasedir)
 
-inst_DATA = code-xml.rnc code-xml.rng xsl/reproduce.xsl xsl/reproduce-latin1.xsl	\
-xsl/copy.xsl ../examples/configs/scanner-c.xml
+inst_DATA = code-xml.rnc code-xml.rng
 
 clean-local:
 	$(RM) -f $(generated_files)
diff --git a/src/xsl/Makefile.am b/src/xsl/Makefile.am
new file mode 100644
index 0000000..464026b
--- /dev/null
+++ b/src/xsl/Makefile.am
@@ -0,0 +1,10 @@
+#
+# This file is part of P2X.
+# Copyright © 2022 Johannes Willkomm
+# See the file p2x.cc for copying conditions.
+#
+
+instbasedir=$(docdir)
+instdir= $(instbasedir)/examples/xsl
+
+inst_DATA = copy.xsl reproduce.xsl reproduce-latin1.xsl
diff --git a/tests/Makefile.am b/tests/Makefile.am
index bec74e0..262b1f4 100644
--- a/tests/Makefile.am
+++ b/tests/Makefile.am
@@ -1,2 +1,4 @@
 SUBDIRS = sh
 
+instdir = $(docdir)
+inst_DATA = run-unit-test
diff --git a/tests/run-unit-test b/tests/run-unit-test
new file mode 100644
index 0000000..d87cef3
--- /dev/null
+++ b/tests/run-unit-test
@@ -0,0 +1,20 @@
+#!/bin/sh -e
+
+debname=p2x
+
+P2X_HOME=${P2X_HOME:-/usr}
+
+if [ "$AUTOPKGTEST_TMP" = "" ] ; then
+    AUTOPKGTEST_TMP=`mktemp -d /tmp/${debname}-test.XXXXXX`
+    trap "rm -rf $AUTOPKGTEST_TMP" 0 INT QUIT ABRT PIPE TERM
+fi
+cd $AUTOPKGTEST_TMP
+cp -a $P2X_HOME/share/doc/$debname/tests/* $AUTOPKGTEST_TMP
+gunzip -r *
+for testfile in *.sh; do
+    if head -n 6 $testfile | grep setup.sh > /dev/null 2>&1; then
+        echo "BEGIN TEST $testfile"
+        chmod a+x $testfile
+        ./$testfile
+    fi
+done
diff --git a/tests/sh/Makefile.am b/tests/sh/Makefile.am
index 740fdbf..278b995 100644
--- a/tests/sh/Makefile.am
+++ b/tests/sh/Makefile.am
@@ -4,7 +4,7 @@ generated_files = all_tests.sh test_cmp_js.sh test_cmp_jsy.sh test_reparse.sh te
 good = val_tests test_reproduce_strict test_reproduce test_reparse	\
 parse_tests merge_tests p2x_tests test_output_stability indent_tests	\
 valgrind_tests output_mode_json_merged output_mode_json			\
-output_mode_matlab_merged output_mode_matlab
+output_mode_matlab_merged output_mode_matlab cdecls
 
 # js tests
 # reproduce_ign test_cmp_js p2xjs_mocha_tests
@@ -31,7 +31,7 @@ test_%.sh: head_%.sh forall_tests.sh
 	echo ". ./myshunit2" >> $@
 	chmod a+x $@
 
-all_tests.sh: update_all_tests.sh
+all_tests.sh: update_all_tests.sh header_all_tests.sh Makefile.am
 	./update_all_tests.sh $(good)
 
 all: $(generated_files)
@@ -50,7 +50,10 @@ check-good: $(good_test_results)
 
 check-bad: $(bad_test_results)
 
-install: all
+instdir = $(docdir)/tests
+bindir = $(docdir)/tests
+
+inst_DATA = setup.sh myshunit2 cdecls.sh
 
 clean:
 	$(RM) -f $(generated_files) test-log.txt test-report.html log_*.txt
diff --git a/tests/sh/cdecls.sh b/tests/sh/cdecls.sh
index 19de03d..4aa448f 100755
--- a/tests/sh/cdecls.sh
+++ b/tests/sh/cdecls.sh
@@ -1,16 +1,28 @@
 #! /bin/zsh
 
 export SHUNIT_PARENT=$0
-. ./setup_zsh.sh
+
+. ./setup.sh
+
+setUp() {
+    :
+}
+
+tearDown() {
+    :
+}
 
 parseCCode() {
     inf=$1
-#    p2x -gmp ../../examples/configs/cdecls $inf | xsltproc ../../src/xsl/parens.xsl -
-    p2x -gmXp ../../examples/configs/cdecls $inf | xsltproc ../../examples/xsl/cdecls.xsl -
+    $P2X -gmXp $exdir/configs/cdecls $inf | tee cdecls.xml | xsltproc $exdir/xsl/cdecls.xsl -
+    ps=($pipestatus)
+    assertEquals "${ps[1]}" "0"
+    assertEquals "${ps[2]}" "0"
+    assertEquals "${ps[3]}" "0"
 }
 
 test_cdecls1() {
-    parseCCode ../../examples/in/cdecls.exp
+    parseCCode $exdir/in/cdecls.exp
 }
 
 . ./myshunit2
diff --git a/tests/sh/common.sh b/tests/sh/common.sh
index 0197c72..68f7731 100644
--- a/tests/sh/common.sh
+++ b/tests/sh/common.sh
@@ -1,11 +1,7 @@
 #
 
 zmodload zsh/mathfunc
-set -o shwordsplit
-export LANG=C # for grep used in shunit2, depends on english output
-
-. ./setup_tmp.sh
-. ./setup_sh.sh
+. ./setup.sh
 
 PYTHON=${PYTHON:-python3}
 
diff --git a/tests/sh/funcs.sh b/tests/sh/funcs.sh
deleted file mode 100644
index 2079c14..0000000
--- a/tests/sh/funcs.sh
+++ /dev/null
@@ -1,61 +0,0 @@
-
-checkParseTreeEqual() {
-    infile=$1
-    exp=$2
-    opts="$3"
-    config="${4:-../../examples/configs/default}"
-    $P2X $P2XFLAGS $opts -p $config ../../examples/in/$infile > $tmpdir/res.xml
-    xsltproc -o $tmpdir/res.txt ../../src/xsl/parens.xsl $tmpdir/res.xml
-    res=$(cat $tmpdir/res.txt)
-    echo "$infile: $(cat ../../examples/in/$infile)  =>  $res"
-    assertEquals "Parse tree is not in expected form: '$exp' != '$res'" "$exp" "$res"
-    rm $tmpdir/res.txt $tmpdir/res.xml
-}
-
-
-checkXforAllConfs() {
-    cfac_cmd=$1
-    for cfac_conf in  ../../examples/configs/*; do
-        if [[ "$cfac_conf" = *.json ]]; then
-            continue
-        fi
-        if [[ "$cfac_conf" = *.xml ]]; then
-            continue
-        fi
-        export P2XCONF=$cfac_conf
-#        echo "${cfac_cmd[*]}"
-        ${cfac_cmd[*]}
-    done
-}
-
-checkXforFlags() {
-    cxff_cmd=$1
-    cxff_flags=$2
-    cxff_P2XFLAGS_=$P2XFLAGS
-    for cxff_flag in $cxff_flags; do
-#        echo "cxff_flag='$cxff_flag'"
-        export P2XFLAGS="$cxff_P2XFLAGS_ $cxff_flag"
-#        echo "P2XFLAGS: $P2XFLAGS"
-#        echo "checkXforFlags: ${cxff_cmd[*]}"
-        ${cxff_cmd[*]}
-    done
-    P2XFLAGS=$P2XFLAGS_
-}
-
-checkXforFlags2() {
-    cxff_cmd=$1
-    cxff_flags=$2
-    cxff_flags2=$3
-    cxff_P2XFLAGS_=$P2XFLAGS
-    for cxff_flag in $cxff_flags; do
-#        echo "cxff_flag='$cxff_flag'"
-        for cxff_flag2 in $cxff_flags2; do
-#            echo "cxff_flag2='$cxff_flag2'"
-            export P2XFLAGS="$cxff_P2XFLAGS_ $cxff_flag $cxff_flag2"
-#            echo "P2XFLAGS: $P2XFLAGS"
-#            echo "checkXforFlags: ${cxff_cmd[*]}"
-            ${cxff_cmd[*]}
-        done
-    done
-    P2XFLAGS=$P2XFLAGS_
-}
diff --git a/tests/sh/head_cmp_js.sh b/tests/sh/head_cmp_js.sh
index c417965..29e78f9 100644
--- a/tests/sh/head_cmp_js.sh
+++ b/tests/sh/head_cmp_js.sh
@@ -1,6 +1,6 @@
 #! /bin/bash
 
-. setup_sh.sh
+. setup.sh
 
 mkParseTree() {
     infile="$1"
diff --git a/tests/sh/head_cmp_jsy.sh b/tests/sh/head_cmp_jsy.sh
index e57a8d9..b5305fe 100644
--- a/tests/sh/head_cmp_jsy.sh
+++ b/tests/sh/head_cmp_jsy.sh
@@ -1,6 +1,6 @@
 #! /bin/bash
 
-. setup_tmp.sh
+. setup.sh
 
 mkParseTree() {
     infile="$1"
diff --git a/tests/sh/head_output_stability.sh b/tests/sh/head_output_stability.sh
index bdc0d50..8b18bf0 100644
--- a/tests/sh/head_output_stability.sh
+++ b/tests/sh/head_output_stability.sh
@@ -1,6 +1,6 @@
 #! /bin/bash
 
-. setup_sh.sh
+. setup.sh
 
 checkExpFile() {
     i=$1
diff --git a/tests/sh/head_reparse.sh b/tests/sh/head_reparse.sh
index 941cba7..d8ff386 100755
--- a/tests/sh/head_reparse.sh
+++ b/tests/sh/head_reparse.sh
@@ -1,6 +1,6 @@
 #! /bin/bash
 
-. setup_tmp.sh
+. setup.sh
 
 checkExpFile() {
     i=$1
diff --git a/tests/sh/head_reproduce.sh b/tests/sh/head_reproduce.sh
index fb3a3cd..c65780d 100755
--- a/tests/sh/head_reproduce.sh
+++ b/tests/sh/head_reproduce.sh
@@ -1,6 +1,6 @@
 #! /bin/bash
 
-. setup_sh.sh
+. setup.sh
 
 checkExpFile() {
     i=$1
diff --git a/tests/sh/head_reproduce_strict.sh b/tests/sh/head_reproduce_strict.sh
index 053b1e5..7064cee 100644
--- a/tests/sh/head_reproduce_strict.sh
+++ b/tests/sh/head_reproduce_strict.sh
@@ -1,6 +1,6 @@
 #! /bin/bash
 
-. setup_sh.sh
+. setup.sh
 
 checkExpFile() {
     i=$1
diff --git a/tests/sh/header_all_tests.sh b/tests/sh/header_all_tests.sh
index e4ed403..910809f 100644
--- a/tests/sh/header_all_tests.sh
+++ b/tests/sh/header_all_tests.sh
@@ -2,7 +2,7 @@
 
 run_suite() {
     echo "Run suite $1"
-    ./$1 > log_$1.txt 2> err_$1.txt
+    ./$1 &> log_$1.txt
     res=$?
     assertEquals "Test suite $1 has errors or failures" 0 $res
     if test "$res" = "0"; then
diff --git a/tests/sh/indent_tests.sh b/tests/sh/indent_tests.sh
index 1ce58c2..d5b5e55 100755
--- a/tests/sh/indent_tests.sh
+++ b/tests/sh/indent_tests.sh
@@ -1,14 +1,7 @@
 #! /bin/zsh
 
-# P2X shunit2 test suite: failing tests
-#
-# This suite runs some tests running p2x with different option
-# controlling indentation of the XML output.
-
-zmodload zsh/mathfunc
-
 export SHUNIT_PARENT=$0
-. ./setup_zsh.sh
+. ./setup.sh
 
 # Test section indent
 testP2X_indentation() {
diff --git a/tests/sh/merge_tests.sh b/tests/sh/merge_tests.sh
index b2835d6..78ae05a 100755
--- a/tests/sh/merge_tests.sh
+++ b/tests/sh/merge_tests.sh
@@ -1,7 +1,7 @@
 #! /bin/zsh
 
 export SHUNIT_PARENT=$0
-. ./setup_zsh.sh
+. ./setup.sh
 
 checkParseTreeEqualLocal() {
     checkParseTreeEqual "$1" "$2" "--merged $3"
diff --git a/tests/sh/p2x_tests.sh b/tests/sh/p2x_tests.sh
index 121a340..7d985a8 100755
--- a/tests/sh/p2x_tests.sh
+++ b/tests/sh/p2x_tests.sh
@@ -1,9 +1,8 @@
 #! /bin/zsh
 
-zmodload zsh/mathfunc
 export SHUNIT_PARENT=$0
 
-. ./setup_zsh.sh
+. ./setup.sh
 
 testP2X1() {
     $P2X notthere.txt > $tmpdir/log 2> $tmpdir/err
diff --git a/tests/sh/parse_tests.sh b/tests/sh/parse_tests.sh
index d6eeb43..f9c3f37 100755
--- a/tests/sh/parse_tests.sh
+++ b/tests/sh/parse_tests.sh
@@ -1,7 +1,7 @@
 #! /bin/zsh
 
 export SHUNIT_PARENT=$0
-. ./setup_zsh.sh
+. ./setup.sh
 
 testParseTreeEqual1() {
   env -u P2XFLAGS ./parse_tests_same_when_merged.sh
diff --git a/tests/sh/parse_tests_merged.sh b/tests/sh/parse_tests_merged.sh
index d280d00..26110eb 100755
--- a/tests/sh/parse_tests_merged.sh
+++ b/tests/sh/parse_tests_merged.sh
@@ -1,7 +1,7 @@
 #! /bin/zsh
 
 export SHUNIT_PARENT=$0
-. ./setup_zsh.sh
+. ./setup.sh
 
 testParseTreeEqual_unary_binary_valid() {
     checkParseTreeEqual ub2.exp "[ub]([ub](1, 2), 3)"
diff --git a/tests/sh/parse_tests_new.sh b/tests/sh/parse_tests_new.sh
index e120da2..4e8ec47 100755
--- a/tests/sh/parse_tests_new.sh
+++ b/tests/sh/parse_tests_new.sh
@@ -1,7 +1,7 @@
 #! /bin/zsh
 
 export SHUNIT_PARENT=$0
-. ./setup_zsh.sh
+. ./setup.sh
 
 testParseTreeEqual1() {
   env -u P2XFLAGS  ./parse_tests_same_when_merged.sh
diff --git a/tests/sh/parse_tests_not_same_when_merged.sh b/tests/sh/parse_tests_not_same_when_merged.sh
index 6c759a4..f530e65 100755
--- a/tests/sh/parse_tests_not_same_when_merged.sh
+++ b/tests/sh/parse_tests_not_same_when_merged.sh
@@ -1,7 +1,7 @@
 #! /bin/zsh
 
 export SHUNIT_PARENT=$0
-. ./setup_zsh.sh
+. ./setup.sh
 
 testParseTreeEqual2() {
     checkParseTreeEqual mult3.exp "[MULT]([MULT](2, 3), 4)"
diff --git a/tests/sh/parse_tests_null_placement.sh b/tests/sh/parse_tests_null_placement.sh
index 2553953..415e3cb 100755
--- a/tests/sh/parse_tests_null_placement.sh
+++ b/tests/sh/parse_tests_null_placement.sh
@@ -1,7 +1,7 @@
 #! /bin/zsh
 
 export SHUNIT_PARENT=$0
-. ./setup_zsh.sh
+. ./setup.sh
 
 checkParseTreeEqual2() {
     infile=$1
diff --git a/tests/sh/parse_tests_same_when_merged.sh b/tests/sh/parse_tests_same_when_merged.sh
index f3cf6b2..3881dbc 100755
--- a/tests/sh/parse_tests_same_when_merged.sh
+++ b/tests/sh/parse_tests_same_when_merged.sh
@@ -1,7 +1,7 @@
 #! /bin/zsh
 
 export SHUNIT_PARENT=$0
-. ./setup_zsh.sh
+. ./setup.sh
 
 testParseTreeEqual1() {
     checkParseTreeEqual postfix-test.exp "[NEWLINE]([a]([P](2), 3))"
diff --git a/tests/sh/setup.sh b/tests/sh/setup.sh
new file mode 100644
index 0000000..a281bae
--- /dev/null
+++ b/tests/sh/setup.sh
@@ -0,0 +1,89 @@
+
+set -o shwordsplit
+
+export LANG=C # for grep used in shunit2 when running with zsh, depends on english output
+
+export P2XFLAGS="$P2XFLAGS --output-mode=x"
+
+top_srcdir=../..
+
+P2X_HOME=${P2X_HOME:-$(readlink -f $(dirname $(which p2x))/..)}
+
+if [[ -x $top_srcdir/src/p2x ]]; then
+    P2X=${P2X:-$top_srcdir/src/p2x}
+    exdir=$top_srcdir/examples
+else
+    P2X=p2x
+    exdir=$P2X_HOME/share/doc/p2x/examples
+fi
+
+tmpdir=${TMP:-/tmp}/shunit2-test-$$
+mkdir $tmpdir
+
+function mycleanup() {
+#    echo "CLEANUP"
+    rm -rf $tmpdir
+}
+
+export SHUNIT_EXIT=mycleanup
+
+checkParseTreeEqual() {
+    infile=$1
+    exp=$2
+    opts="$3"
+    config="${4:-../../examples/configs/default}"
+    $P2X $P2XFLAGS $opts -p $config ../../examples/in/$infile > $tmpdir/res.xml
+    xsltproc -o $tmpdir/res.txt ../../src/xsl/parens.xsl $tmpdir/res.xml
+    res=$(cat $tmpdir/res.txt)
+    echo "$infile: $(cat ../../examples/in/$infile)  =>  $res"
+    assertEquals "Parse tree is not in expected form: '$exp' != '$res'" "$exp" "$res"
+    rm $tmpdir/res.txt $tmpdir/res.xml
+}
+
+
+checkXforAllConfs() {
+    cfac_cmd=$1
+    for cfac_conf in  ../../examples/configs/*; do
+        if [[ "$cfac_conf" = *.json ]]; then
+            continue
+        fi
+        if [[ "$cfac_conf" = *.xml ]]; then
+            continue
+        fi
+        export P2XCONF=$cfac_conf
+#        echo "${cfac_cmd[*]}"
+        ${cfac_cmd[*]}
+    done
+}
+
+checkXforFlags() {
+    cxff_cmd=$1
+    cxff_flags=$2
+    cxff_P2XFLAGS_=$P2XFLAGS
+    for cxff_flag in $cxff_flags; do
+#        echo "cxff_flag='$cxff_flag'"
+        export P2XFLAGS="$cxff_P2XFLAGS_ $cxff_flag"
+#        echo "P2XFLAGS: $P2XFLAGS"
+#        echo "checkXforFlags: ${cxff_cmd[*]}"
+        ${cxff_cmd[*]}
+    done
+    P2XFLAGS=$P2XFLAGS_
+}
+
+checkXforFlags2() {
+    cxff_cmd=$1
+    cxff_flags=$2
+    cxff_flags2=$3
+    cxff_P2XFLAGS_=$P2XFLAGS
+    for cxff_flag in $cxff_flags; do
+#        echo "cxff_flag='$cxff_flag'"
+        for cxff_flag2 in $cxff_flags2; do
+#            echo "cxff_flag2='$cxff_flag2'"
+            export P2XFLAGS="$cxff_P2XFLAGS_ $cxff_flag $cxff_flag2"
+#            echo "P2XFLAGS: $P2XFLAGS"
+#            echo "checkXforFlags: ${cxff_cmd[*]}"
+            ${cxff_cmd[*]}
+        done
+    done
+    P2XFLAGS=$P2XFLAGS_
+}
diff --git a/tests/sh/setup_sh.sh b/tests/sh/setup_sh.sh
deleted file mode 100644
index 3fe65b9..0000000
--- a/tests/sh/setup_sh.sh
+++ /dev/null
@@ -1,7 +0,0 @@
-export P2XFLAGS="$P2XFLAGS --output-mode=x"
-
-top_srcdir=../..
-P2X=${P2X:-$top_srcdir/src/p2x}
-
-. ./setup_tmp.sh
-. ./funcs.sh
diff --git a/tests/sh/setup_tmp.sh b/tests/sh/setup_tmp.sh
deleted file mode 100644
index b6e6c9c..0000000
--- a/tests/sh/setup_tmp.sh
+++ /dev/null
@@ -1,9 +0,0 @@
-tmpdir=${TMP:-/tmp}/shunit2-test-$$
-mkdir $tmpdir
-
-function mycleanup() {
-#    echo "CLEANUP"
-    rm -rf $tmpdir
-}
-
-export SHUNIT_EXIT=mycleanup
diff --git a/tests/sh/setup_zsh.sh b/tests/sh/setup_zsh.sh
deleted file mode 100644
index a23f63b..0000000
--- a/tests/sh/setup_zsh.sh
+++ /dev/null
@@ -1,6 +0,0 @@
-
-set -o shwordsplit
-
-export LANG=C # for grep used in shunit2 when running with zsh, depends on english output
-
-. ./setup_sh.sh
diff --git a/tests/sh/val_tests.sh b/tests/sh/val_tests.sh
index 3cc01ab..f4e932c 100755
--- a/tests/sh/val_tests.sh
+++ b/tests/sh/val_tests.sh
@@ -1,44 +1,14 @@
 #! /bin/bash
 
-. setup_sh.sh
-
-runWithTimeout() {
-    rm -f done.txt fail.txt
-    ($* && touch done.txt || touch fail.txt) &
-    bpid=$!
-#    echo "job started: $bpid"
-    for i in 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15; do
-        if [[ -e done.txt ]] || [[ -e fail.txt ]]; then
-            break
-        fi
-        if ! [[ "$i" = 15 ]]; then
-            sleep 0.1
-        fi
-    done
-    if [[ -e done.txt ]]; then
-        rm -f fail.txt
-        rm done.txt
-        true
-    else
-        if [[ -e fail.txt ]]; then
-            rm fail.txt
-            false
-        else
-            echo "The job $bpid did not terminate!"
-            kill $bpid
-            kill $bpid
-            kill $bpid
-            killall $1
-            killall $1
-            killall $1
-            # its not my fault it didn't terminate
-            true
-        fi
-    fi
-}
+. setup.sh
 
 mydir=$(dirname $BASH_SOURCE)
 
+grammar=$P2X_HOME/share/p2x/code-xml.rng
+if ! [[ -f $grammar ]]; then
+    grammar=$mydir/../../src/code-xml.rng
+fi
+
 testOutputValid() {
 
     for i in $mydir/../../examples/in/*.exp; do
@@ -52,7 +22,7 @@ testOutputValid() {
         fi
         $P2X $P2XFLAGS $opts -p $mydir/../../examples/configs/default $i > $tmpdir/res.xml
 #        runWithTimeout xmlstarlet val -e -r ../../src/code-xml.rng res.xml
-        xmlstarlet val -b -e -r $mydir/../../src/code-xml.rng $tmpdir/res.xml
+        xmlstarlet val -b -e -r $grammar $tmpdir/res.xml
         assertEquals "Validating XML output for $i failed" 0 $?
 #        rm $tmpdir/res.xml
     done
