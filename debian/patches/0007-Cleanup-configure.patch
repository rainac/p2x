From: Johannes Willkomm <johannes@johannes-willkomm.de>
Date: Wed, 16 Oct 2024 22:58:23 +0200
Subject: Cleanup configure

---
 Makefile.am          |  5 ++++-
 configure.ac         | 43 +++++++++++++++++++++++++++----------------
 tests/sh/Makefile.am | 14 +++++++++-----
 3 files changed, 40 insertions(+), 22 deletions(-)

diff --git a/Makefile.am b/Makefile.am
index 36e23b9..ea71b29 100644
--- a/Makefile.am
+++ b/Makefile.am
@@ -4,7 +4,10 @@
 # See the file p2x.cc for copying conditions.  
 #
 
-SUBDIRS = src examples tests
+SUBDIRS = examples tests
+if acond_CPLUSPLUS_ENABLED
+SUBDIRS += src
+endif
 if acond_NPM_AVAIL
 SUBDIRS += src-js
 endif
diff --git a/configure.ac b/configure.ac
index ede883e..cc22026 100644
--- a/configure.ac
+++ b/configure.ac
@@ -20,19 +20,6 @@ AC_PROG_LN_S
 AC_PROG_RANLIB
 AC_PROG_LEX([yywrap])
 
-AC_CHECK_TOOL([STRIP], [strip], [strip-for-host-system-was-not-found])
-AC_CHECK_PROGS([CP], [cp copy])
-AC_CHECK_PROGS([RM], [rm del])
-AC_CHECK_PROGS([MV], [mv rename])
-AC_CHECK_PROGS([BASENAME], [basename])
-AC_CHECK_PROGS([GHEAD], [ghead head])
-
-AC_CHECK_PROGS([GENGETOPT], [gengetopt])
-AM_CONDITIONAL(acond_GENGETOPT_AVAIL, [test "x$GENGETOPT" != "x"])
-
-AC_CHECK_PROGS([NPM], [npm])
-AM_CONDITIONAL(acond_NPM_AVAIL, [test "x$NPM" != "x"])
-
 AC_ARG_ENABLE([js], [  --enable-js    Enable install of P2X JS implementation.
   --disable-js   No VCS version file.], [
       js_enabled=$enableval
@@ -42,6 +29,9 @@ AC_ARG_ENABLE([js], [  --enable-js    Enable install of P2X JS implementation.
 AM_CONDITIONAL(acond_JS_ENABLED, [test "$js_enabled" = "yes"])
 
 if [test "$js_enabled" = "yes"]; then
+
+AC_CHECK_PROGS([NPM], [npm])
+
 if [test "x$NPM" != "x"]; then
    npm_packages="most-xml tmp node-minify"
    npm_packages_avail=yes
@@ -54,13 +44,25 @@ if [test "x$NPM" != "x"]; then
    done
 fi
 fi
+AM_CONDITIONAL(acond_NPM_AVAIL, [test "x$NPM" != "x"])
 AM_CONDITIONAL(acond_NPM_PKGS_AVAIL, [test "$npm_packages_avail" != ""])
 
 AC_CHECK_PROGS([TRANG], [trang])
 AM_CONDITIONAL(acond_TRANG_AVAIL, [test "x$TRANG" != "x"])
 
+
+AC_ARG_ENABLE([cplusplus], [  --enable-cplusplus    Enable install of P2X CPLUSPLUS implementation.
+  --disable-cplusplus   No VCS version file.], [
+      cplusplus_enabled=$enableval
+], [
+      cplusplus_enabled=yes
+])
+AM_CONDITIONAL(acond_CPLUSPLUS_ENABLED, [test "$cplusplus_enabled" = "yes"])
+
+if [test "$cplusplus_enabled" = "yes"]; then
+AC_CHECK_PROGS([GENGETOPT], [gengetopt])
+
 AC_CHECK_PROGS([FLEX], [flex])
-AM_CONDITIONAL(acond_FLEX_AVAIL, [test "x$FLEX" != "x"])
 if test "x$FLEX" = "x"; then
   AC_MSG_ERROR([mandatory program flex was not found])
 fi
@@ -86,7 +88,6 @@ else
    defval_STATIC_BUILD=0
 fi
 AC_DEFINE_UNQUOTED([P2X_STATIC_BUILD], [$defval_STATIC_BUILD], [1: static build])
-AM_CONDITIONAL(acond_STATIC_BUILD, [test "x$static_build" = "xyes"])
 
 AC_ARG_ENABLE([debug], [  --enable-debug         Build debugally linked executables.
   --disable-debug        Build dynamically linked executables.], [
@@ -104,7 +105,17 @@ else
    defval_DEBUG_BUILD=0
 fi
 AC_DEFINE_UNQUOTED([P2X_DEBUG_BUILD], [$defval_DEBUG_BUILD], [1: debug build])
-AM_CONDITIONAL(acond_DEBUG_BUILD, [test "x$debug_build" = "xyes"])
+
+fi
+
+AM_CONDITIONAL(acond_GENGETOPT_AVAIL, [test "$GENGETOPT" != ""])
+AM_CONDITIONAL(acond_FLEX_AVAIL, [test "$FLEX" != ""])
+AM_CONDITIONAL(acond_RE2C_AVAIL, [test "$FLEX" != ""])
+AM_CONDITIONAL(acond_STATIC_BUILD, [test "$static_build" = "yes"])
+AM_CONDITIONAL(acond_DEBUG_BUILD, [test "$debug_build" = "yes"])
+
+AC_CHECK_PROGS([EMACS], [emacs])
+AM_CONDITIONAL(acond_EMACS_AVAIL, [test "x$EMACS" != "x"])
 
 AC_ARG_ENABLE([saveprotoptr], [  --enable-saveprotoptr         Store ptr to prototype in each token.
   --disable-static        Do not store ptr to prototype in each token.], [
diff --git a/tests/sh/Makefile.am b/tests/sh/Makefile.am
index 86da752..363005a 100644
--- a/tests/sh/Makefile.am
+++ b/tests/sh/Makefile.am
@@ -1,11 +1,15 @@
 
 generated_files = all_tests.sh test_cmp_js.sh test_cmp_jsy.sh test_reparse.sh test_reproduce_strict.sh test_reproduce.sh test_output_stability.sh forall_tests.sh
 
-good = val_tests test_reproduce_strict test_reproduce test_reparse	\
-parse_tests parse_tests_merged parse_tests_merged_parens merge_tests	\
-p2x_tests test_output_stability indent_tests valgrind_tests		\
-output_mode_json_merged output_mode_json output_mode_matlab_merged	\
-output_mode_matlab cdecls
+good =
+
+if acond_CPLUSPLUS_ENABLED
+good += val_tests test_reproduce_strict test_reproduce test_reparse	\
+ parse_tests parse_tests_merged parse_tests_merged_parens merge_tests	\
+ p2x_tests test_output_stability indent_tests valgrind_tests		\
+ output_mode_json_merged output_mode_json output_mode_matlab_merged	\
+ output_mode_matlab cdecls
+endif
 
 if acond_NPM_AVAIL
 good += p2xjs_mocha_tests test_cmp_js reproduce_ign
